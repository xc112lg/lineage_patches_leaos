From f5278ce3bb9e522c4218295aa8708922d24d6e98 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Fri, 27 Nov 2020 07:37:29 -0500
Subject: [PATCH 069/115] require unlocking to use cellular quick tile

  from
  https://github.com/GrapheneOS/platform_frameworks_base/commit/dd8996354f4e67b8d2f1ed82e172f5498ea4e391
---
 .../systemui/qs/tiles/CellularTile.java       | 32 +++++++++++++++----
 1 file changed, 26 insertions(+), 6 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
index dd6e11f8737..47ebaa79fb2 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/CellularTile.java
@@ -74,10 +74,18 @@ public class CellularTile extends QSTileImpl<SignalState> {
         super(host);
         mController = networkController;
         mActivityStarter = activityStarter;
-        mKeyguard = keyguardStateController;
         mDataController = mController.getMobileDataController();
         mDetailAdapter = new CellularDetailAdapter();
         mController.observe(getLifecycle(), mSignalCallback);
+
+        mKeyguard = keyguardStateController;
+        final KeyguardStateController.Callback callback = new KeyguardStateController.Callback() {
+            @Override
+            public void onKeyguardShowingChanged() {
+                refreshState();
+            }
+        };
+        mKeyguard.observe(this, callback);
     }
 
     @Override
@@ -103,16 +111,27 @@ public class CellularTile extends QSTileImpl<SignalState> {
         return new Intent(Settings.Panel.ACTION_MOBILE_DATA);
     }
 
+    private void handleClickInner() {
+        if (mDataController.isMobileDataEnabled()) {
+            maybeShowDisableDialog();
+        } else {
+            mDataController.setMobileDataEnabled(true);
+        }
+    }
+
     @Override
     protected void handleClick() {
         if (getState().state == Tile.STATE_UNAVAILABLE) {
             return;
         }
-        if (mDataController.isMobileDataEnabled()) {
-            maybeShowDisableDialog();
-        } else {
-            mDataController.setMobileDataEnabled(true);
+        if (mKeyguard.isMethodSecure() && mKeyguard.isShowing()) {
+            mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
+                mHost.openPanels();
+                handleClickInner();
+            });
+            return;
         }
+        handleClickInner();
     }
 
     private void maybeShowDisableDialog() {
@@ -150,8 +169,9 @@ public class CellularTile extends QSTileImpl<SignalState> {
             return;
         }
         if (mDataController.isMobileDataSupported()) {
-            if (mKeyguard.isMethodSecure() && !mKeyguard.canDismissLockScreen()) {
+            if (mKeyguard.isMethodSecure() && mKeyguard.isShowing()) {
                 mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
+                    mHost.openPanels();
                     showDetail(true);
                 });
                 return;
-- 
2.25.1

