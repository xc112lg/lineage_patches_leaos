From c7dbef504062d4647dfe91a64a93a31b7ac9840b Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Fri, 25 Sep 2020 08:23:44 -0400
Subject: [PATCH 082/115] speed things up v5

  based on
  https://github.com/BootleggersROM/frameworks_base/commit/507f7de1f4cb6dca77ab8ea7d076fbadd637b5fe
  https://github.com/BlissRoms/platform_frameworks_base/commit/206efdf0a9f6154648b9cf0f7da81319f8087254

Change-Id: Ie65e102bfdef889b8b6de82ef2fe1efe47d09e13
---
 core/java/android/view/ViewConfiguration.java | 16 ++++++++--------
 core/java/android/widget/AbsListView.java     |  1 +
 core/java/android/widget/ScrollView.java      |  1 +
 3 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/core/java/android/view/ViewConfiguration.java b/core/java/android/view/ViewConfiguration.java
index cb69ab6ae4b..89049096a32 100644
--- a/core/java/android/view/ViewConfiguration.java
+++ b/core/java/android/view/ViewConfiguration.java
@@ -75,13 +75,13 @@ public class ViewConfiguration {
      * a long press
      * @hide
      */
-    public static final int DEFAULT_LONG_PRESS_TIMEOUT = 400;
+    public static final int DEFAULT_LONG_PRESS_TIMEOUT = 250;
 
     /**
      * Defines the default duration in milliseconds between the first tap's up event and the second
      * tap's down event for an interaction to be considered part of the same multi-press.
      */
-    private static final int DEFAULT_MULTI_PRESS_TIMEOUT = 300;
+    private static final int DEFAULT_MULTI_PRESS_TIMEOUT = 250;
 
     /**
      * Defines the time between successive key repeats in milliseconds.
@@ -93,7 +93,7 @@ public class ViewConfiguration {
      * appropriate button to bring up the global actions dialog (power off,
      * lock screen, etc).
      */
-    private static final int GLOBAL_ACTIONS_KEY_TIMEOUT = 500;
+    private static final int GLOBAL_ACTIONS_KEY_TIMEOUT = 250;
 
     /**
      * Defines the duration in milliseconds a user needs to hold down the
@@ -125,7 +125,7 @@ public class ViewConfiguration {
      * is a jump tap. If the user does not complete the jump tap within this interval, it is
      * considered to be a tap.
      */
-    private static final int JUMP_TAP_TIMEOUT = 500;
+    private static final int JUMP_TAP_TIMEOUT = 250;
 
     /**
      * Defines the duration in milliseconds between the first tap's up event and
@@ -159,12 +159,12 @@ public class ViewConfiguration {
      * Defines the duration in milliseconds we want to display zoom controls in response
      * to a user panning within an application.
      */
-    private static final int ZOOM_CONTROLS_TIMEOUT = 3000;
+    private static final int ZOOM_CONTROLS_TIMEOUT = 1500;
 
     /**
      * Inset in dips to look for touchable content when the user touches the edge of the screen
      */
-    private static final int EDGE_SLOP = 12;
+    private static final int EDGE_SLOP = 6;
 
     /**
      * Distance a touch can wander before we think the user is scrolling in dips.
@@ -223,7 +223,7 @@ public class ViewConfiguration {
     /**
      * Maximum velocity to initiate a fling, as measured in dips per second
      */
-    private static final int MAXIMUM_FLING_VELOCITY = 8000;
+    private static final int MAXIMUM_FLING_VELOCITY = 24000;
 
     /**
      * Delay before dispatching a recurring accessibility event in milliseconds.
@@ -244,7 +244,7 @@ public class ViewConfiguration {
      * The coefficient of friction applied to flings/scrolls.
      */
     @UnsupportedAppUsage
-    private static final float SCROLL_FRICTION = 0.012f;
+    private static final float SCROLL_FRICTION = 0.005f;
 
     /**
      * Max distance in dips to overscroll for edge effects
diff --git a/core/java/android/widget/AbsListView.java b/core/java/android/widget/AbsListView.java
index 4220ae958c3..7d887422da7 100644
--- a/core/java/android/widget/AbsListView.java
+++ b/core/java/android/widget/AbsListView.java
@@ -4748,6 +4748,7 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
 
         FlingRunnable() {
             mScroller = new OverScroller(getContext());
+            mScroller.setFriction(0.005f);
         }
 
         // Use AbsListView#fling(int) instead
diff --git a/core/java/android/widget/ScrollView.java b/core/java/android/widget/ScrollView.java
index 9b403e6581c..635b0da4046 100644
--- a/core/java/android/widget/ScrollView.java
+++ b/core/java/android/widget/ScrollView.java
@@ -343,6 +343,7 @@ public class ScrollView extends FrameLayout {
 
     private void initScrollView() {
         mScroller = new OverScroller(getContext());
+        mScroller.setFriction(0.005f);
         setFocusable(true);
         setDescendantFocusability(FOCUS_AFTER_DESCENDANTS);
         setWillNotDraw(false);
-- 
2.25.1

