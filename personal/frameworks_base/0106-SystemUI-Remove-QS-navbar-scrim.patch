From 4d8213a738d2a5e977f1a39471962f27dddf7352 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Fri, 25 Sep 2020 14:30:21 -0700
Subject: [PATCH 106/115] SystemUI: Remove QS navbar scrim

In the age of flat material design, this scrim looks outdated and
out-of-place. It's also quite ugly in the QS edit screen, where it
overlaps the edit view for no apparent reason because the edit view is
already fully opaque.

The existing notification shade scrim provides enough contrast with the
contents of the app behind the QS, and background blurring helps even
more with that, so let's just remove this scrim altogether.

Change-Id: Iaba142751aa033b30a44e23888db7e7664f0ef9f
---
 .../SystemUI/res/drawable/qs_navbar_scrim.xml | 25 -------------------
 .../res/layout/status_bar_expanded.xml        |  8 ------
 .../NotificationPanelViewController.java      |  9 -------
 3 files changed, 42 deletions(-)
 delete mode 100644 packages/SystemUI/res/drawable/qs_navbar_scrim.xml

diff --git a/packages/SystemUI/res/drawable/qs_navbar_scrim.xml b/packages/SystemUI/res/drawable/qs_navbar_scrim.xml
deleted file mode 100644
index bbb2617db4a..00000000000
--- a/packages/SystemUI/res/drawable/qs_navbar_scrim.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright (C) 2014 The Android Open Source Project
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License
-  -->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <gradient
-            android:type="linear"
-            android:angle="90"
-            android:startColor="#55000000"
-            android:endColor="#00000000" />
-</shape>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/status_bar_expanded.xml b/packages/SystemUI/res/layout/status_bar_expanded.xml
index 465b5b25781..5c6557326e9 100644
--- a/packages/SystemUI/res/layout/status_bar_expanded.xml
+++ b/packages/SystemUI/res/layout/status_bar_expanded.xml
@@ -110,13 +110,5 @@
         layout="@layout/keyguard_bottom_area"
         android:visibility="gone" />
 
-    <com.android.systemui.statusbar.AlphaOptimizedView
-        android:id="@+id/qs_navbar_scrim"
-        android:layout_height="96dp"
-        android:layout_width="match_parent"
-        android:layout_gravity="bottom"
-        android:visibility="invisible"
-        android:background="@drawable/qs_navbar_scrim" />
-
     <include layout="@layout/status_bar_expanded_plugin_frame"/>
 </com.android.systemui.statusbar.phone.NotificationPanelView>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelViewController.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelViewController.java
index 49b8f8f4c62..978585c0902 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelViewController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelViewController.java
@@ -285,7 +285,6 @@ public class NotificationPanelViewController extends PanelViewController {
     private QS mQs;
     private FrameLayout mQsFrame;
     private KeyguardStatusView mKeyguardStatusView;
-    private View mQsNavbarScrim;
     private NotificationsQuickSettingsContainer mNotificationContainerParent;
     private NotificationStackScrollLayout mNotificationStackScroller;
     private boolean mAnimateNextPositionUpdate;
@@ -649,7 +648,6 @@ public class NotificationPanelViewController extends PanelViewController {
         mNotificationStackScroller.setOnEmptySpaceClickListener(mOnEmptySpaceClickListener);
         addTrackingHeadsUpListener(mNotificationStackScroller::setTrackingHeadsUp);
         mKeyguardBottomArea = mView.findViewById(R.id.keyguard_bottom_area);
-        mQsNavbarScrim = mView.findViewById(R.id.qs_navbar_scrim);
         mLastOrientation = mResources.getConfiguration().orientation;
         mPulseLightsView = (NotificationLightsView) mView.findViewById(R.id.lights_container);
 
@@ -1783,9 +1781,6 @@ public class NotificationPanelViewController extends PanelViewController {
                         || mQsExpansionFromOverscroll));
         updateEmptyShadeView();
 
-        mQsNavbarScrim.setVisibility(
-                mBarState == StatusBarState.SHADE && mQsExpanded && !mStackScrollerOverscrolling
-                        && mQsScrimEnabled ? View.VISIBLE : View.INVISIBLE);
         if (mKeyguardUserSwitcher != null && mQsExpanded && !mStackScrollerOverscrolling) {
             mKeyguardUserSwitcher.hideIfNotSimple(true /* animate */);
         }
@@ -1817,10 +1812,6 @@ public class NotificationPanelViewController extends PanelViewController {
             updateKeyguardBottomAreaAlpha();
             updateBigClockAlpha();
         }
-        if (mBarState == StatusBarState.SHADE && mQsExpanded && !mStackScrollerOverscrolling
-                && mQsScrimEnabled) {
-            mQsNavbarScrim.setAlpha(getQsExpansionFraction());
-        }
 
         if (mAccessibilityManager.isEnabled()) {
             mView.setAccessibilityPaneTitle(determineAccessibilityPaneTitle());
-- 
2.25.1

