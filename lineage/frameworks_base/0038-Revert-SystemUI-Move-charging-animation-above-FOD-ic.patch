From 00a518f1e41ae21ff5b1bf1b7489512b321b19b5 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Sun, 19 Sep 2021 19:30:26 +0000
Subject: [PATCH 38/52] Revert "SystemUI: Move charging animation above FOD
 icon if In-display fingerprint is active"

This reverts commit c37abdd483ed5695c6bae13383d0760add65023e.
---
 .../KeyguardIndicationController.java         | 58 -------------------
 1 file changed, 58 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java b/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
index ba21cd2fce5..da32e5eedc4 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/KeyguardIndicationController.java
@@ -24,13 +24,11 @@ import android.animation.ValueAnimator;
 import android.app.admin.DevicePolicyManager;
 import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.pm.PackageManager;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.pm.UserInfo;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
-import android.graphics.Point;
 import android.hardware.biometrics.BiometricSourceType;
 import android.hardware.face.FaceManager;
 import android.hardware.fingerprint.FingerprintManager;
@@ -44,10 +42,8 @@ import android.provider.Settings;
 import android.text.TextUtils;
 import android.text.format.Formatter;
 import android.util.Log;
-import android.view.Display;
 import android.view.View;
 import android.view.ViewGroup;
-import android.view.WindowManager;
 
 import androidx.annotation.Nullable;
 
@@ -83,9 +79,6 @@ import java.util.IllegalFormatConversionException;
 import javax.inject.Inject;
 import javax.inject.Singleton;
 
-import lineageos.app.LineageContextConstants;
-import vendor.lineage.biometrics.fingerprint.inscreen.V1_0.IFingerprintInscreen;
-
 /**
  * Controls the indications and error messages shown on the Keyguard
  */
@@ -117,7 +110,6 @@ public class KeyguardIndicationController implements StateListener,
     private KeyguardIndicationTextView mDisclosure;
     private LottieAnimationView mChargingIndicationView;
     private int mChargingIndication = 1;
-    private int mFODPositionY = 0;
     private final IBatteryStats mBatteryInfo;
     private final SettableWakeLock mWakeLock;
     private final DockManager mDockManager;
@@ -228,17 +220,6 @@ public class KeyguardIndicationController implements StateListener,
         mChargingIndicationView = (LottieAnimationView) indicationArea.findViewById(
                 R.id.charging_indication);
         updateChargingIndicationStyle();
-        if (hasActiveInDisplayFp()) {
-            try {
-                IFingerprintInscreen daemon = IFingerprintInscreen.getService();
-                mFODPositionY = daemon.getPositionY();
-            } catch (RemoteException e) {
-                // do nothing
-            }
-            if (mFODPositionY <= 0) {
-                mFODPositionY = 0;
-            }
-        }
         mDisclosure = indicationArea.findViewById(R.id.keyguard_indication_enterprise_disclosure);
         mDisclosureMaxAlpha = mDisclosure.getAlpha();
         updateIndication(false /* animate */);
@@ -590,37 +571,6 @@ public class KeyguardIndicationController implements StateListener,
 
     private void updateChargingIndication() {
         if (mChargingIndication > 0 && !mDozing && mBatteryPresent && mPowerPluggedIn) {
-            if (hasActiveInDisplayFp()) {
-                if (mFODPositionY != 0) {
-                    // Get screen height
-                    WindowManager windowManager = mContext.getSystemService(WindowManager.class);
-                    Display defaultDisplay = windowManager.getDefaultDisplay();
-                    Point size = new Point();
-                    defaultDisplay.getRealSize(size);
-                    int screenHeight = size.y;
-                    // Correct FOD position if cutout is hidden
-                    int statusbarHeight = mContext.getResources().getDimensionPixelSize(
-                            com.android.internal.R.dimen.status_bar_height_portrait);
-                    boolean cutoutMasked = mContext.getResources().getBoolean(
-                            com.android.internal.R.bool.config_maskMainBuiltInDisplayCutout);
-                    int fodPositionY = mFODPositionY;
-                    if (cutoutMasked) {
-                        fodPositionY = mFODPositionY - statusbarHeight;
-                    }
-                    // Get indication text height
-                    int textViewHeight = mTextView.getMeasuredHeight();
-                    // Get bottom margin height
-                    int marginBottom = mContext.getResources().getDimensionPixelSize(
-                            R.dimen.keyguard_indication_margin_bottom_fingerprint_in_display);
-                    // Calculate charging indication margin
-                    int animationMargin = (screenHeight - fodPositionY) - (textViewHeight + marginBottom) + 10;
-                    // Set position of charging indication
-                    ViewGroup.MarginLayoutParams params =
-                            (ViewGroup.MarginLayoutParams) mChargingIndicationView.getLayoutParams();
-                    params.setMargins(0, 0, 0, animationMargin);
-                    mChargingIndicationView.setLayoutParams(params);
-                }
-            }
             mChargingIndicationView.setVisibility(View.VISIBLE);
             mChargingIndicationView.playAnimation();
         } else {
@@ -628,14 +578,6 @@ public class KeyguardIndicationController implements StateListener,
         }
     }
 
-    private boolean hasActiveInDisplayFp() {
-        PackageManager packageManager = mContext.getPackageManager();
-        boolean hasInDisplayFingerprint = packageManager.hasSystemFeature(LineageContextConstants.Features.FOD);
-        int userId = KeyguardUpdateMonitor.getCurrentUser();
-        FingerprintManager fpm = (FingerprintManager) mContext.getSystemService(Context.FINGERPRINT_SERVICE);
-        return hasInDisplayFingerprint && fpm.getEnrolledFingerprints(userId).size() > 0;
-    }
-
     // animates textView - textView moves up and bounces down
     private void animateText(KeyguardIndicationTextView textView, String indication) {
         int yTranslation = mContext.getResources().getInteger(
-- 
2.30.2

